// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: olap_file.proto

#ifndef PROTOBUF_olap_5ffile_2eproto__INCLUDED
#define PROTOBUF_olap_5ffile_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "olap_common.pb.h"
// @@protoc_insertion_point(includes)

namespace palo {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_olap_5ffile_2eproto();
void protobuf_AssignDesc_olap_5ffile_2eproto();
void protobuf_ShutdownFile_olap_5ffile_2eproto();

class ColumnPruning;
class DeltaPruning;
class FileVersionMessage;
class SchemaChangeStatusMessage;
class DeleteDataConditionMessage;
class OLAPHeaderMessage;
class OLAPIndexHeaderMessage;
class OLAPDataHeaderMessage;
class OLAPRawDeltaHeaderMessage;

enum DataFileType {
  OLAP_DATA_FILE = 0,
  COLUMN_ORIENTED_FILE = 1
};
bool DataFileType_IsValid(int value);
const DataFileType DataFileType_MIN = OLAP_DATA_FILE;
const DataFileType DataFileType_MAX = COLUMN_ORIENTED_FILE;
const int DataFileType_ARRAYSIZE = DataFileType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataFileType_descriptor();
inline const ::std::string& DataFileType_Name(DataFileType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataFileType_descriptor(), value);
}
inline bool DataFileType_Parse(
    const ::std::string& name, DataFileType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataFileType>(
    DataFileType_descriptor(), name, value);
}
enum KeysType {
  DUP_KEYS = 0,
  UNIQUE_KEYS = 1,
  AGG_KEYS = 2
};
bool KeysType_IsValid(int value);
const KeysType KeysType_MIN = DUP_KEYS;
const KeysType KeysType_MAX = AGG_KEYS;
const int KeysType_ARRAYSIZE = KeysType_MAX + 1;

const ::google::protobuf::EnumDescriptor* KeysType_descriptor();
inline const ::std::string& KeysType_Name(KeysType value) {
  return ::google::protobuf::internal::NameOfEnum(
    KeysType_descriptor(), value);
}
inline bool KeysType_Parse(
    const ::std::string& name, KeysType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KeysType>(
    KeysType_descriptor(), name, value);
}
// ===================================================================

class ColumnPruning : public ::google::protobuf::Message {
 public:
  ColumnPruning();
  virtual ~ColumnPruning();

  ColumnPruning(const ColumnPruning& from);

  inline ColumnPruning& operator=(const ColumnPruning& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColumnPruning& default_instance();

  void Swap(ColumnPruning* other);

  // implements Message ----------------------------------------------

  ColumnPruning* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColumnPruning& from);
  void MergeFrom(const ColumnPruning& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes min = 1;
  inline bool has_min() const;
  inline void clear_min();
  static const int kMinFieldNumber = 1;
  inline const ::std::string& min() const;
  inline void set_min(const ::std::string& value);
  inline void set_min(const char* value);
  inline void set_min(const void* value, size_t size);
  inline ::std::string* mutable_min();
  inline ::std::string* release_min();
  inline void set_allocated_min(::std::string* min);

  // required bytes max = 2;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 2;
  inline const ::std::string& max() const;
  inline void set_max(const ::std::string& value);
  inline void set_max(const char* value);
  inline void set_max(const void* value, size_t size);
  inline ::std::string* mutable_max();
  inline ::std::string* release_max();
  inline void set_allocated_max(::std::string* max);

  // optional bool null_flag = 3;
  inline bool has_null_flag() const;
  inline void clear_null_flag();
  static const int kNullFlagFieldNumber = 3;
  inline bool null_flag() const;
  inline void set_null_flag(bool value);

  // @@protoc_insertion_point(class_scope:palo.ColumnPruning)
 private:
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_null_flag();
  inline void clear_has_null_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* min_;
  ::std::string* max_;
  bool null_flag_;
  friend void  protobuf_AddDesc_olap_5ffile_2eproto();
  friend void protobuf_AssignDesc_olap_5ffile_2eproto();
  friend void protobuf_ShutdownFile_olap_5ffile_2eproto();

  void InitAsDefaultInstance();
  static ColumnPruning* default_instance_;
};
// -------------------------------------------------------------------

class DeltaPruning : public ::google::protobuf::Message {
 public:
  DeltaPruning();
  virtual ~DeltaPruning();

  DeltaPruning(const DeltaPruning& from);

  inline DeltaPruning& operator=(const DeltaPruning& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeltaPruning& default_instance();

  void Swap(DeltaPruning* other);

  // implements Message ----------------------------------------------

  DeltaPruning* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeltaPruning& from);
  void MergeFrom(const DeltaPruning& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .palo.ColumnPruning column_pruning = 1;
  inline int column_pruning_size() const;
  inline void clear_column_pruning();
  static const int kColumnPruningFieldNumber = 1;
  inline const ::palo::ColumnPruning& column_pruning(int index) const;
  inline ::palo::ColumnPruning* mutable_column_pruning(int index);
  inline ::palo::ColumnPruning* add_column_pruning();
  inline const ::google::protobuf::RepeatedPtrField< ::palo::ColumnPruning >&
      column_pruning() const;
  inline ::google::protobuf::RepeatedPtrField< ::palo::ColumnPruning >*
      mutable_column_pruning();

  // @@protoc_insertion_point(class_scope:palo.DeltaPruning)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::palo::ColumnPruning > column_pruning_;
  friend void  protobuf_AddDesc_olap_5ffile_2eproto();
  friend void protobuf_AssignDesc_olap_5ffile_2eproto();
  friend void protobuf_ShutdownFile_olap_5ffile_2eproto();

  void InitAsDefaultInstance();
  static DeltaPruning* default_instance_;
};
// -------------------------------------------------------------------

class FileVersionMessage : public ::google::protobuf::Message {
 public:
  FileVersionMessage();
  virtual ~FileVersionMessage();

  FileVersionMessage(const FileVersionMessage& from);

  inline FileVersionMessage& operator=(const FileVersionMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileVersionMessage& default_instance();

  void Swap(FileVersionMessage* other);

  // implements Message ----------------------------------------------

  FileVersionMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileVersionMessage& from);
  void MergeFrom(const FileVersionMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 num_segments = 1 [default = 0];
  inline bool has_num_segments() const;
  inline void clear_num_segments();
  static const int kNumSegmentsFieldNumber = 1;
  inline ::google::protobuf::uint32 num_segments() const;
  inline void set_num_segments(::google::protobuf::uint32 value);

  // required int32 start_version = 2;
  inline bool has_start_version() const;
  inline void clear_start_version();
  static const int kStartVersionFieldNumber = 2;
  inline ::google::protobuf::int32 start_version() const;
  inline void set_start_version(::google::protobuf::int32 value);

  // required int32 end_version = 3;
  inline bool has_end_version() const;
  inline void clear_end_version();
  static const int kEndVersionFieldNumber = 3;
  inline ::google::protobuf::int32 end_version() const;
  inline void set_end_version(::google::protobuf::int32 value);

  // required int64 version_hash = 4 [default = 0];
  inline bool has_version_hash() const;
  inline void clear_version_hash();
  static const int kVersionHashFieldNumber = 4;
  inline ::google::protobuf::int64 version_hash() const;
  inline void set_version_hash(::google::protobuf::int64 value);

  // required int64 max_timestamp = 5 [default = 0];
  inline bool has_max_timestamp() const;
  inline void clear_max_timestamp();
  static const int kMaxTimestampFieldNumber = 5;
  inline ::google::protobuf::int64 max_timestamp() const;
  inline void set_max_timestamp(::google::protobuf::int64 value);

  // required int64 index_size = 6 [default = 0];
  inline bool has_index_size() const;
  inline void clear_index_size();
  static const int kIndexSizeFieldNumber = 6;
  inline ::google::protobuf::int64 index_size() const;
  inline void set_index_size(::google::protobuf::int64 value);

  // required int64 data_size = 7 [default = 0];
  inline bool has_data_size() const;
  inline void clear_data_size();
  static const int kDataSizeFieldNumber = 7;
  inline ::google::protobuf::int64 data_size() const;
  inline void set_data_size(::google::protobuf::int64 value);

  // optional int64 num_rows = 8 [default = 0];
  inline bool has_num_rows() const;
  inline void clear_num_rows();
  static const int kNumRowsFieldNumber = 8;
  inline ::google::protobuf::int64 num_rows() const;
  inline void set_num_rows(::google::protobuf::int64 value);

  // required int64 creation_time = 9 [default = 0];
  inline bool has_creation_time() const;
  inline void clear_creation_time();
  static const int kCreationTimeFieldNumber = 9;
  inline ::google::protobuf::int64 creation_time() const;
  inline void set_creation_time(::google::protobuf::int64 value);

  // optional .palo.DeltaPruning delta_pruning = 10;
  inline bool has_delta_pruning() const;
  inline void clear_delta_pruning();
  static const int kDeltaPruningFieldNumber = 10;
  inline const ::palo::DeltaPruning& delta_pruning() const;
  inline ::palo::DeltaPruning* mutable_delta_pruning();
  inline ::palo::DeltaPruning* release_delta_pruning();
  inline void set_allocated_delta_pruning(::palo::DeltaPruning* delta_pruning);

  // @@protoc_insertion_point(class_scope:palo.FileVersionMessage)
 private:
  inline void set_has_num_segments();
  inline void clear_has_num_segments();
  inline void set_has_start_version();
  inline void clear_has_start_version();
  inline void set_has_end_version();
  inline void clear_has_end_version();
  inline void set_has_version_hash();
  inline void clear_has_version_hash();
  inline void set_has_max_timestamp();
  inline void clear_has_max_timestamp();
  inline void set_has_index_size();
  inline void clear_has_index_size();
  inline void set_has_data_size();
  inline void clear_has_data_size();
  inline void set_has_num_rows();
  inline void clear_has_num_rows();
  inline void set_has_creation_time();
  inline void clear_has_creation_time();
  inline void set_has_delta_pruning();
  inline void clear_has_delta_pruning();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_segments_;
  ::google::protobuf::int32 start_version_;
  ::google::protobuf::int64 version_hash_;
  ::google::protobuf::int64 max_timestamp_;
  ::google::protobuf::int64 index_size_;
  ::google::protobuf::int64 data_size_;
  ::google::protobuf::int64 num_rows_;
  ::google::protobuf::int64 creation_time_;
  ::palo::DeltaPruning* delta_pruning_;
  ::google::protobuf::int32 end_version_;
  friend void  protobuf_AddDesc_olap_5ffile_2eproto();
  friend void protobuf_AssignDesc_olap_5ffile_2eproto();
  friend void protobuf_ShutdownFile_olap_5ffile_2eproto();

  void InitAsDefaultInstance();
  static FileVersionMessage* default_instance_;
};
// -------------------------------------------------------------------

class SchemaChangeStatusMessage : public ::google::protobuf::Message {
 public:
  SchemaChangeStatusMessage();
  virtual ~SchemaChangeStatusMessage();

  SchemaChangeStatusMessage(const SchemaChangeStatusMessage& from);

  inline SchemaChangeStatusMessage& operator=(const SchemaChangeStatusMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SchemaChangeStatusMessage& default_instance();

  void Swap(SchemaChangeStatusMessage* other);

  // implements Message ----------------------------------------------

  SchemaChangeStatusMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SchemaChangeStatusMessage& from);
  void MergeFrom(const SchemaChangeStatusMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 related_tablet_id = 1;
  inline bool has_related_tablet_id() const;
  inline void clear_related_tablet_id();
  static const int kRelatedTabletIdFieldNumber = 1;
  inline ::google::protobuf::int64 related_tablet_id() const;
  inline void set_related_tablet_id(::google::protobuf::int64 value);

  // required int32 related_schema_hash = 2;
  inline bool has_related_schema_hash() const;
  inline void clear_related_schema_hash();
  static const int kRelatedSchemaHashFieldNumber = 2;
  inline ::google::protobuf::int32 related_schema_hash() const;
  inline void set_related_schema_hash(::google::protobuf::int32 value);

  // repeated .palo.FileVersionMessage versions_to_be_changed = 3;
  inline int versions_to_be_changed_size() const;
  inline void clear_versions_to_be_changed();
  static const int kVersionsToBeChangedFieldNumber = 3;
  inline const ::palo::FileVersionMessage& versions_to_be_changed(int index) const;
  inline ::palo::FileVersionMessage* mutable_versions_to_be_changed(int index);
  inline ::palo::FileVersionMessage* add_versions_to_be_changed();
  inline const ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage >&
      versions_to_be_changed() const;
  inline ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage >*
      mutable_versions_to_be_changed();

  // required int32 schema_change_type = 4;
  inline bool has_schema_change_type() const;
  inline void clear_schema_change_type();
  static const int kSchemaChangeTypeFieldNumber = 4;
  inline ::google::protobuf::int32 schema_change_type() const;
  inline void set_schema_change_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:palo.SchemaChangeStatusMessage)
 private:
  inline void set_has_related_tablet_id();
  inline void clear_has_related_tablet_id();
  inline void set_has_related_schema_hash();
  inline void clear_has_related_schema_hash();
  inline void set_has_schema_change_type();
  inline void clear_has_schema_change_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 related_tablet_id_;
  ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage > versions_to_be_changed_;
  ::google::protobuf::int32 related_schema_hash_;
  ::google::protobuf::int32 schema_change_type_;
  friend void  protobuf_AddDesc_olap_5ffile_2eproto();
  friend void protobuf_AssignDesc_olap_5ffile_2eproto();
  friend void protobuf_ShutdownFile_olap_5ffile_2eproto();

  void InitAsDefaultInstance();
  static SchemaChangeStatusMessage* default_instance_;
};
// -------------------------------------------------------------------

class DeleteDataConditionMessage : public ::google::protobuf::Message {
 public:
  DeleteDataConditionMessage();
  virtual ~DeleteDataConditionMessage();

  DeleteDataConditionMessage(const DeleteDataConditionMessage& from);

  inline DeleteDataConditionMessage& operator=(const DeleteDataConditionMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteDataConditionMessage& default_instance();

  void Swap(DeleteDataConditionMessage* other);

  // implements Message ----------------------------------------------

  DeleteDataConditionMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteDataConditionMessage& from);
  void MergeFrom(const DeleteDataConditionMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // repeated string sub_conditions = 2;
  inline int sub_conditions_size() const;
  inline void clear_sub_conditions();
  static const int kSubConditionsFieldNumber = 2;
  inline const ::std::string& sub_conditions(int index) const;
  inline ::std::string* mutable_sub_conditions(int index);
  inline void set_sub_conditions(int index, const ::std::string& value);
  inline void set_sub_conditions(int index, const char* value);
  inline void set_sub_conditions(int index, const char* value, size_t size);
  inline ::std::string* add_sub_conditions();
  inline void add_sub_conditions(const ::std::string& value);
  inline void add_sub_conditions(const char* value);
  inline void add_sub_conditions(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& sub_conditions() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_sub_conditions();

  // @@protoc_insertion_point(class_scope:palo.DeleteDataConditionMessage)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> sub_conditions_;
  ::google::protobuf::int32 version_;
  friend void  protobuf_AddDesc_olap_5ffile_2eproto();
  friend void protobuf_AssignDesc_olap_5ffile_2eproto();
  friend void protobuf_ShutdownFile_olap_5ffile_2eproto();

  void InitAsDefaultInstance();
  static DeleteDataConditionMessage* default_instance_;
};
// -------------------------------------------------------------------

class OLAPHeaderMessage : public ::google::protobuf::Message {
 public:
  OLAPHeaderMessage();
  virtual ~OLAPHeaderMessage();

  OLAPHeaderMessage(const OLAPHeaderMessage& from);

  inline OLAPHeaderMessage& operator=(const OLAPHeaderMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OLAPHeaderMessage& default_instance();

  void Swap(OLAPHeaderMessage* other);

  // implements Message ----------------------------------------------

  OLAPHeaderMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OLAPHeaderMessage& from);
  void MergeFrom(const OLAPHeaderMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 num_rows_per_data_block = 1;
  inline bool has_num_rows_per_data_block() const;
  inline void clear_num_rows_per_data_block();
  static const int kNumRowsPerDataBlockFieldNumber = 1;
  inline ::google::protobuf::uint32 num_rows_per_data_block() const;
  inline void set_num_rows_per_data_block(::google::protobuf::uint32 value);

  // repeated .palo.FileVersionMessage file_version = 2;
  inline int file_version_size() const;
  inline void clear_file_version();
  static const int kFileVersionFieldNumber = 2;
  inline const ::palo::FileVersionMessage& file_version(int index) const;
  inline ::palo::FileVersionMessage* mutable_file_version(int index);
  inline ::palo::FileVersionMessage* add_file_version();
  inline const ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage >&
      file_version() const;
  inline ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage >*
      mutable_file_version();

  // required int32 cumulative_layer_point = 3;
  inline bool has_cumulative_layer_point() const;
  inline void clear_cumulative_layer_point();
  static const int kCumulativeLayerPointFieldNumber = 3;
  inline ::google::protobuf::int32 cumulative_layer_point() const;
  inline void set_cumulative_layer_point(::google::protobuf::int32 value);

  // required uint32 num_short_key_fields = 4;
  inline bool has_num_short_key_fields() const;
  inline void clear_num_short_key_fields();
  static const int kNumShortKeyFieldsFieldNumber = 4;
  inline ::google::protobuf::uint32 num_short_key_fields() const;
  inline void set_num_short_key_fields(::google::protobuf::uint32 value);

  // repeated .palo.ColumnMessage column = 5;
  inline int column_size() const;
  inline void clear_column();
  static const int kColumnFieldNumber = 5;
  inline const ::palo::ColumnMessage& column(int index) const;
  inline ::palo::ColumnMessage* mutable_column(int index);
  inline ::palo::ColumnMessage* add_column();
  inline const ::google::protobuf::RepeatedPtrField< ::palo::ColumnMessage >&
      column() const;
  inline ::google::protobuf::RepeatedPtrField< ::palo::ColumnMessage >*
      mutable_column();

  // required int64 creation_time = 6;
  inline bool has_creation_time() const;
  inline void clear_creation_time();
  static const int kCreationTimeFieldNumber = 6;
  inline ::google::protobuf::int64 creation_time() const;
  inline void set_creation_time(::google::protobuf::int64 value);

  // repeated int32 selectivity = 7;
  inline int selectivity_size() const;
  inline void clear_selectivity();
  static const int kSelectivityFieldNumber = 7;
  inline ::google::protobuf::int32 selectivity(int index) const;
  inline void set_selectivity(int index, ::google::protobuf::int32 value);
  inline void add_selectivity(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      selectivity() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_selectivity();

  // optional .palo.SchemaChangeStatusMessage schema_change_status = 8;
  inline bool has_schema_change_status() const;
  inline void clear_schema_change_status();
  static const int kSchemaChangeStatusFieldNumber = 8;
  inline const ::palo::SchemaChangeStatusMessage& schema_change_status() const;
  inline ::palo::SchemaChangeStatusMessage* mutable_schema_change_status();
  inline ::palo::SchemaChangeStatusMessage* release_schema_change_status();
  inline void set_allocated_schema_change_status(::palo::SchemaChangeStatusMessage* schema_change_status);

  // optional .palo.DataFileType data_file_type = 9 [default = OLAP_DATA_FILE];
  inline bool has_data_file_type() const;
  inline void clear_data_file_type();
  static const int kDataFileTypeFieldNumber = 9;
  inline ::palo::DataFileType data_file_type() const;
  inline void set_data_file_type(::palo::DataFileType value);

  // optional uint32 next_column_unique_id = 10 [default = 0];
  inline bool has_next_column_unique_id() const;
  inline void clear_next_column_unique_id();
  static const int kNextColumnUniqueIdFieldNumber = 10;
  inline ::google::protobuf::uint32 next_column_unique_id() const;
  inline void set_next_column_unique_id(::google::protobuf::uint32 value);

  // optional .palo.CompressKind compress_kind = 11 [default = COMPRESS_LZO];
  inline bool has_compress_kind() const;
  inline void clear_compress_kind();
  static const int kCompressKindFieldNumber = 11;
  inline ::palo::CompressKind compress_kind() const;
  inline void set_compress_kind(::palo::CompressKind value);

  // optional uint32 segment_size = 12 [default = 4292870144];
  inline bool has_segment_size() const;
  inline void clear_segment_size();
  static const int kSegmentSizeFieldNumber = 12;
  inline ::google::protobuf::uint32 segment_size() const;
  inline void set_segment_size(::google::protobuf::uint32 value);

  // repeated .palo.DeleteDataConditionMessage delete_data_conditions = 13;
  inline int delete_data_conditions_size() const;
  inline void clear_delete_data_conditions();
  static const int kDeleteDataConditionsFieldNumber = 13;
  inline const ::palo::DeleteDataConditionMessage& delete_data_conditions(int index) const;
  inline ::palo::DeleteDataConditionMessage* mutable_delete_data_conditions(int index);
  inline ::palo::DeleteDataConditionMessage* add_delete_data_conditions();
  inline const ::google::protobuf::RepeatedPtrField< ::palo::DeleteDataConditionMessage >&
      delete_data_conditions() const;
  inline ::google::protobuf::RepeatedPtrField< ::palo::DeleteDataConditionMessage >*
      mutable_delete_data_conditions();

  // optional double bf_fpp = 14;
  inline bool has_bf_fpp() const;
  inline void clear_bf_fpp();
  static const int kBfFppFieldNumber = 14;
  inline double bf_fpp() const;
  inline void set_bf_fpp(double value);

  // optional .palo.KeysType keys_type = 15;
  inline bool has_keys_type() const;
  inline void clear_keys_type();
  static const int kKeysTypeFieldNumber = 15;
  inline ::palo::KeysType keys_type() const;
  inline void set_keys_type(::palo::KeysType value);

  // @@protoc_insertion_point(class_scope:palo.OLAPHeaderMessage)
 private:
  inline void set_has_num_rows_per_data_block();
  inline void clear_has_num_rows_per_data_block();
  inline void set_has_cumulative_layer_point();
  inline void clear_has_cumulative_layer_point();
  inline void set_has_num_short_key_fields();
  inline void clear_has_num_short_key_fields();
  inline void set_has_creation_time();
  inline void clear_has_creation_time();
  inline void set_has_schema_change_status();
  inline void clear_has_schema_change_status();
  inline void set_has_data_file_type();
  inline void clear_has_data_file_type();
  inline void set_has_next_column_unique_id();
  inline void clear_has_next_column_unique_id();
  inline void set_has_compress_kind();
  inline void clear_has_compress_kind();
  inline void set_has_segment_size();
  inline void clear_has_segment_size();
  inline void set_has_bf_fpp();
  inline void clear_has_bf_fpp();
  inline void set_has_keys_type();
  inline void clear_has_keys_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage > file_version_;
  ::google::protobuf::uint32 num_rows_per_data_block_;
  ::google::protobuf::int32 cumulative_layer_point_;
  ::google::protobuf::RepeatedPtrField< ::palo::ColumnMessage > column_;
  ::google::protobuf::int64 creation_time_;
  ::google::protobuf::uint32 num_short_key_fields_;
  int data_file_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > selectivity_;
  ::palo::SchemaChangeStatusMessage* schema_change_status_;
  ::google::protobuf::uint32 next_column_unique_id_;
  int compress_kind_;
  ::google::protobuf::RepeatedPtrField< ::palo::DeleteDataConditionMessage > delete_data_conditions_;
  ::google::protobuf::uint32 segment_size_;
  int keys_type_;
  double bf_fpp_;
  friend void  protobuf_AddDesc_olap_5ffile_2eproto();
  friend void protobuf_AssignDesc_olap_5ffile_2eproto();
  friend void protobuf_ShutdownFile_olap_5ffile_2eproto();

  void InitAsDefaultInstance();
  static OLAPHeaderMessage* default_instance_;
};
// -------------------------------------------------------------------

class OLAPIndexHeaderMessage : public ::google::protobuf::Message {
 public:
  OLAPIndexHeaderMessage();
  virtual ~OLAPIndexHeaderMessage();

  OLAPIndexHeaderMessage(const OLAPIndexHeaderMessage& from);

  inline OLAPIndexHeaderMessage& operator=(const OLAPIndexHeaderMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OLAPIndexHeaderMessage& default_instance();

  void Swap(OLAPIndexHeaderMessage* other);

  // implements Message ----------------------------------------------

  OLAPIndexHeaderMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OLAPIndexHeaderMessage& from);
  void MergeFrom(const OLAPIndexHeaderMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 start_version = 1;
  inline bool has_start_version() const;
  inline void clear_start_version();
  static const int kStartVersionFieldNumber = 1;
  inline ::google::protobuf::int32 start_version() const;
  inline void set_start_version(::google::protobuf::int32 value);

  // required int32 end_version = 2;
  inline bool has_end_version() const;
  inline void clear_end_version();
  static const int kEndVersionFieldNumber = 2;
  inline ::google::protobuf::int32 end_version() const;
  inline void set_end_version(::google::protobuf::int32 value);

  // required int64 cumulative_version_hash = 3;
  inline bool has_cumulative_version_hash() const;
  inline void clear_cumulative_version_hash();
  static const int kCumulativeVersionHashFieldNumber = 3;
  inline ::google::protobuf::int64 cumulative_version_hash() const;
  inline void set_cumulative_version_hash(::google::protobuf::int64 value);

  // required uint32 segment = 4;
  inline bool has_segment() const;
  inline void clear_segment();
  static const int kSegmentFieldNumber = 4;
  inline ::google::protobuf::uint32 segment() const;
  inline void set_segment(::google::protobuf::uint32 value);

  // required uint32 num_rows_per_block = 5;
  inline bool has_num_rows_per_block() const;
  inline void clear_num_rows_per_block();
  static const int kNumRowsPerBlockFieldNumber = 5;
  inline ::google::protobuf::uint32 num_rows_per_block() const;
  inline void set_num_rows_per_block(::google::protobuf::uint32 value);

  // optional bool null_supported = 6;
  inline bool has_null_supported() const;
  inline void clear_null_supported();
  static const int kNullSupportedFieldNumber = 6;
  inline bool null_supported() const;
  inline void set_null_supported(bool value);

  // optional bool delete_flag = 7;
  inline bool has_delete_flag() const;
  inline void clear_delete_flag();
  static const int kDeleteFlagFieldNumber = 7;
  inline bool delete_flag() const;
  inline void set_delete_flag(bool value);

  // @@protoc_insertion_point(class_scope:palo.OLAPIndexHeaderMessage)
 private:
  inline void set_has_start_version();
  inline void clear_has_start_version();
  inline void set_has_end_version();
  inline void clear_has_end_version();
  inline void set_has_cumulative_version_hash();
  inline void clear_has_cumulative_version_hash();
  inline void set_has_segment();
  inline void clear_has_segment();
  inline void set_has_num_rows_per_block();
  inline void clear_has_num_rows_per_block();
  inline void set_has_null_supported();
  inline void clear_has_null_supported();
  inline void set_has_delete_flag();
  inline void clear_has_delete_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 start_version_;
  ::google::protobuf::int32 end_version_;
  ::google::protobuf::int64 cumulative_version_hash_;
  ::google::protobuf::uint32 segment_;
  ::google::protobuf::uint32 num_rows_per_block_;
  bool null_supported_;
  bool delete_flag_;
  friend void  protobuf_AddDesc_olap_5ffile_2eproto();
  friend void protobuf_AssignDesc_olap_5ffile_2eproto();
  friend void protobuf_ShutdownFile_olap_5ffile_2eproto();

  void InitAsDefaultInstance();
  static OLAPIndexHeaderMessage* default_instance_;
};
// -------------------------------------------------------------------

class OLAPDataHeaderMessage : public ::google::protobuf::Message {
 public:
  OLAPDataHeaderMessage();
  virtual ~OLAPDataHeaderMessage();

  OLAPDataHeaderMessage(const OLAPDataHeaderMessage& from);

  inline OLAPDataHeaderMessage& operator=(const OLAPDataHeaderMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OLAPDataHeaderMessage& default_instance();

  void Swap(OLAPDataHeaderMessage* other);

  // implements Message ----------------------------------------------

  OLAPDataHeaderMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OLAPDataHeaderMessage& from);
  void MergeFrom(const OLAPDataHeaderMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 segment = 2;
  inline bool has_segment() const;
  inline void clear_segment();
  static const int kSegmentFieldNumber = 2;
  inline ::google::protobuf::uint32 segment() const;
  inline void set_segment(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:palo.OLAPDataHeaderMessage)
 private:
  inline void set_has_segment();
  inline void clear_has_segment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 segment_;
  friend void  protobuf_AddDesc_olap_5ffile_2eproto();
  friend void protobuf_AssignDesc_olap_5ffile_2eproto();
  friend void protobuf_ShutdownFile_olap_5ffile_2eproto();

  void InitAsDefaultInstance();
  static OLAPDataHeaderMessage* default_instance_;
};
// -------------------------------------------------------------------

class OLAPRawDeltaHeaderMessage : public ::google::protobuf::Message {
 public:
  OLAPRawDeltaHeaderMessage();
  virtual ~OLAPRawDeltaHeaderMessage();

  OLAPRawDeltaHeaderMessage(const OLAPRawDeltaHeaderMessage& from);

  inline OLAPRawDeltaHeaderMessage& operator=(const OLAPRawDeltaHeaderMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OLAPRawDeltaHeaderMessage& default_instance();

  void Swap(OLAPRawDeltaHeaderMessage* other);

  // implements Message ----------------------------------------------

  OLAPRawDeltaHeaderMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OLAPRawDeltaHeaderMessage& from);
  void MergeFrom(const OLAPRawDeltaHeaderMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 schema_hash = 2;
  inline bool has_schema_hash() const;
  inline void clear_schema_hash();
  static const int kSchemaHashFieldNumber = 2;
  inline ::google::protobuf::int32 schema_hash() const;
  inline void set_schema_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:palo.OLAPRawDeltaHeaderMessage)
 private:
  inline void set_has_schema_hash();
  inline void clear_has_schema_hash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 schema_hash_;
  friend void  protobuf_AddDesc_olap_5ffile_2eproto();
  friend void protobuf_AssignDesc_olap_5ffile_2eproto();
  friend void protobuf_ShutdownFile_olap_5ffile_2eproto();

  void InitAsDefaultInstance();
  static OLAPRawDeltaHeaderMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// ColumnPruning

// required bytes min = 1;
inline bool ColumnPruning::has_min() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ColumnPruning::set_has_min() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ColumnPruning::clear_has_min() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ColumnPruning::clear_min() {
  if (min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_->clear();
  }
  clear_has_min();
}
inline const ::std::string& ColumnPruning::min() const {
  // @@protoc_insertion_point(field_get:palo.ColumnPruning.min)
  return *min_;
}
inline void ColumnPruning::set_min(const ::std::string& value) {
  set_has_min();
  if (min_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_ = new ::std::string;
  }
  min_->assign(value);
  // @@protoc_insertion_point(field_set:palo.ColumnPruning.min)
}
inline void ColumnPruning::set_min(const char* value) {
  set_has_min();
  if (min_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_ = new ::std::string;
  }
  min_->assign(value);
  // @@protoc_insertion_point(field_set_char:palo.ColumnPruning.min)
}
inline void ColumnPruning::set_min(const void* value, size_t size) {
  set_has_min();
  if (min_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_ = new ::std::string;
  }
  min_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palo.ColumnPruning.min)
}
inline ::std::string* ColumnPruning::mutable_min() {
  set_has_min();
  if (min_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    min_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:palo.ColumnPruning.min)
  return min_;
}
inline ::std::string* ColumnPruning::release_min() {
  clear_has_min();
  if (min_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = min_;
    min_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ColumnPruning::set_allocated_min(::std::string* min) {
  if (min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete min_;
  }
  if (min) {
    set_has_min();
    min_ = min;
  } else {
    clear_has_min();
    min_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:palo.ColumnPruning.min)
}

// required bytes max = 2;
inline bool ColumnPruning::has_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ColumnPruning::set_has_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ColumnPruning::clear_has_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ColumnPruning::clear_max() {
  if (max_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_->clear();
  }
  clear_has_max();
}
inline const ::std::string& ColumnPruning::max() const {
  // @@protoc_insertion_point(field_get:palo.ColumnPruning.max)
  return *max_;
}
inline void ColumnPruning::set_max(const ::std::string& value) {
  set_has_max();
  if (max_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_ = new ::std::string;
  }
  max_->assign(value);
  // @@protoc_insertion_point(field_set:palo.ColumnPruning.max)
}
inline void ColumnPruning::set_max(const char* value) {
  set_has_max();
  if (max_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_ = new ::std::string;
  }
  max_->assign(value);
  // @@protoc_insertion_point(field_set_char:palo.ColumnPruning.max)
}
inline void ColumnPruning::set_max(const void* value, size_t size) {
  set_has_max();
  if (max_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_ = new ::std::string;
  }
  max_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palo.ColumnPruning.max)
}
inline ::std::string* ColumnPruning::mutable_max() {
  set_has_max();
  if (max_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    max_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:palo.ColumnPruning.max)
  return max_;
}
inline ::std::string* ColumnPruning::release_max() {
  clear_has_max();
  if (max_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = max_;
    max_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ColumnPruning::set_allocated_max(::std::string* max) {
  if (max_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete max_;
  }
  if (max) {
    set_has_max();
    max_ = max;
  } else {
    clear_has_max();
    max_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:palo.ColumnPruning.max)
}

// optional bool null_flag = 3;
inline bool ColumnPruning::has_null_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ColumnPruning::set_has_null_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ColumnPruning::clear_has_null_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ColumnPruning::clear_null_flag() {
  null_flag_ = false;
  clear_has_null_flag();
}
inline bool ColumnPruning::null_flag() const {
  // @@protoc_insertion_point(field_get:palo.ColumnPruning.null_flag)
  return null_flag_;
}
inline void ColumnPruning::set_null_flag(bool value) {
  set_has_null_flag();
  null_flag_ = value;
  // @@protoc_insertion_point(field_set:palo.ColumnPruning.null_flag)
}

// -------------------------------------------------------------------

// DeltaPruning

// repeated .palo.ColumnPruning column_pruning = 1;
inline int DeltaPruning::column_pruning_size() const {
  return column_pruning_.size();
}
inline void DeltaPruning::clear_column_pruning() {
  column_pruning_.Clear();
}
inline const ::palo::ColumnPruning& DeltaPruning::column_pruning(int index) const {
  // @@protoc_insertion_point(field_get:palo.DeltaPruning.column_pruning)
  return column_pruning_.Get(index);
}
inline ::palo::ColumnPruning* DeltaPruning::mutable_column_pruning(int index) {
  // @@protoc_insertion_point(field_mutable:palo.DeltaPruning.column_pruning)
  return column_pruning_.Mutable(index);
}
inline ::palo::ColumnPruning* DeltaPruning::add_column_pruning() {
  // @@protoc_insertion_point(field_add:palo.DeltaPruning.column_pruning)
  return column_pruning_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::palo::ColumnPruning >&
DeltaPruning::column_pruning() const {
  // @@protoc_insertion_point(field_list:palo.DeltaPruning.column_pruning)
  return column_pruning_;
}
inline ::google::protobuf::RepeatedPtrField< ::palo::ColumnPruning >*
DeltaPruning::mutable_column_pruning() {
  // @@protoc_insertion_point(field_mutable_list:palo.DeltaPruning.column_pruning)
  return &column_pruning_;
}

// -------------------------------------------------------------------

// FileVersionMessage

// required uint32 num_segments = 1 [default = 0];
inline bool FileVersionMessage::has_num_segments() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FileVersionMessage::set_has_num_segments() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FileVersionMessage::clear_has_num_segments() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FileVersionMessage::clear_num_segments() {
  num_segments_ = 0u;
  clear_has_num_segments();
}
inline ::google::protobuf::uint32 FileVersionMessage::num_segments() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.num_segments)
  return num_segments_;
}
inline void FileVersionMessage::set_num_segments(::google::protobuf::uint32 value) {
  set_has_num_segments();
  num_segments_ = value;
  // @@protoc_insertion_point(field_set:palo.FileVersionMessage.num_segments)
}

// required int32 start_version = 2;
inline bool FileVersionMessage::has_start_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FileVersionMessage::set_has_start_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FileVersionMessage::clear_has_start_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FileVersionMessage::clear_start_version() {
  start_version_ = 0;
  clear_has_start_version();
}
inline ::google::protobuf::int32 FileVersionMessage::start_version() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.start_version)
  return start_version_;
}
inline void FileVersionMessage::set_start_version(::google::protobuf::int32 value) {
  set_has_start_version();
  start_version_ = value;
  // @@protoc_insertion_point(field_set:palo.FileVersionMessage.start_version)
}

// required int32 end_version = 3;
inline bool FileVersionMessage::has_end_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FileVersionMessage::set_has_end_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FileVersionMessage::clear_has_end_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FileVersionMessage::clear_end_version() {
  end_version_ = 0;
  clear_has_end_version();
}
inline ::google::protobuf::int32 FileVersionMessage::end_version() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.end_version)
  return end_version_;
}
inline void FileVersionMessage::set_end_version(::google::protobuf::int32 value) {
  set_has_end_version();
  end_version_ = value;
  // @@protoc_insertion_point(field_set:palo.FileVersionMessage.end_version)
}

// required int64 version_hash = 4 [default = 0];
inline bool FileVersionMessage::has_version_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FileVersionMessage::set_has_version_hash() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FileVersionMessage::clear_has_version_hash() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FileVersionMessage::clear_version_hash() {
  version_hash_ = GOOGLE_LONGLONG(0);
  clear_has_version_hash();
}
inline ::google::protobuf::int64 FileVersionMessage::version_hash() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.version_hash)
  return version_hash_;
}
inline void FileVersionMessage::set_version_hash(::google::protobuf::int64 value) {
  set_has_version_hash();
  version_hash_ = value;
  // @@protoc_insertion_point(field_set:palo.FileVersionMessage.version_hash)
}

// required int64 max_timestamp = 5 [default = 0];
inline bool FileVersionMessage::has_max_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FileVersionMessage::set_has_max_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FileVersionMessage::clear_has_max_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FileVersionMessage::clear_max_timestamp() {
  max_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_max_timestamp();
}
inline ::google::protobuf::int64 FileVersionMessage::max_timestamp() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.max_timestamp)
  return max_timestamp_;
}
inline void FileVersionMessage::set_max_timestamp(::google::protobuf::int64 value) {
  set_has_max_timestamp();
  max_timestamp_ = value;
  // @@protoc_insertion_point(field_set:palo.FileVersionMessage.max_timestamp)
}

// required int64 index_size = 6 [default = 0];
inline bool FileVersionMessage::has_index_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FileVersionMessage::set_has_index_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FileVersionMessage::clear_has_index_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FileVersionMessage::clear_index_size() {
  index_size_ = GOOGLE_LONGLONG(0);
  clear_has_index_size();
}
inline ::google::protobuf::int64 FileVersionMessage::index_size() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.index_size)
  return index_size_;
}
inline void FileVersionMessage::set_index_size(::google::protobuf::int64 value) {
  set_has_index_size();
  index_size_ = value;
  // @@protoc_insertion_point(field_set:palo.FileVersionMessage.index_size)
}

// required int64 data_size = 7 [default = 0];
inline bool FileVersionMessage::has_data_size() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FileVersionMessage::set_has_data_size() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FileVersionMessage::clear_has_data_size() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FileVersionMessage::clear_data_size() {
  data_size_ = GOOGLE_LONGLONG(0);
  clear_has_data_size();
}
inline ::google::protobuf::int64 FileVersionMessage::data_size() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.data_size)
  return data_size_;
}
inline void FileVersionMessage::set_data_size(::google::protobuf::int64 value) {
  set_has_data_size();
  data_size_ = value;
  // @@protoc_insertion_point(field_set:palo.FileVersionMessage.data_size)
}

// optional int64 num_rows = 8 [default = 0];
inline bool FileVersionMessage::has_num_rows() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FileVersionMessage::set_has_num_rows() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FileVersionMessage::clear_has_num_rows() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FileVersionMessage::clear_num_rows() {
  num_rows_ = GOOGLE_LONGLONG(0);
  clear_has_num_rows();
}
inline ::google::protobuf::int64 FileVersionMessage::num_rows() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.num_rows)
  return num_rows_;
}
inline void FileVersionMessage::set_num_rows(::google::protobuf::int64 value) {
  set_has_num_rows();
  num_rows_ = value;
  // @@protoc_insertion_point(field_set:palo.FileVersionMessage.num_rows)
}

// required int64 creation_time = 9 [default = 0];
inline bool FileVersionMessage::has_creation_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FileVersionMessage::set_has_creation_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FileVersionMessage::clear_has_creation_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FileVersionMessage::clear_creation_time() {
  creation_time_ = GOOGLE_LONGLONG(0);
  clear_has_creation_time();
}
inline ::google::protobuf::int64 FileVersionMessage::creation_time() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.creation_time)
  return creation_time_;
}
inline void FileVersionMessage::set_creation_time(::google::protobuf::int64 value) {
  set_has_creation_time();
  creation_time_ = value;
  // @@protoc_insertion_point(field_set:palo.FileVersionMessage.creation_time)
}

// optional .palo.DeltaPruning delta_pruning = 10;
inline bool FileVersionMessage::has_delta_pruning() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FileVersionMessage::set_has_delta_pruning() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FileVersionMessage::clear_has_delta_pruning() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FileVersionMessage::clear_delta_pruning() {
  if (delta_pruning_ != NULL) delta_pruning_->::palo::DeltaPruning::Clear();
  clear_has_delta_pruning();
}
inline const ::palo::DeltaPruning& FileVersionMessage::delta_pruning() const {
  // @@protoc_insertion_point(field_get:palo.FileVersionMessage.delta_pruning)
  return delta_pruning_ != NULL ? *delta_pruning_ : *default_instance_->delta_pruning_;
}
inline ::palo::DeltaPruning* FileVersionMessage::mutable_delta_pruning() {
  set_has_delta_pruning();
  if (delta_pruning_ == NULL) delta_pruning_ = new ::palo::DeltaPruning;
  // @@protoc_insertion_point(field_mutable:palo.FileVersionMessage.delta_pruning)
  return delta_pruning_;
}
inline ::palo::DeltaPruning* FileVersionMessage::release_delta_pruning() {
  clear_has_delta_pruning();
  ::palo::DeltaPruning* temp = delta_pruning_;
  delta_pruning_ = NULL;
  return temp;
}
inline void FileVersionMessage::set_allocated_delta_pruning(::palo::DeltaPruning* delta_pruning) {
  delete delta_pruning_;
  delta_pruning_ = delta_pruning;
  if (delta_pruning) {
    set_has_delta_pruning();
  } else {
    clear_has_delta_pruning();
  }
  // @@protoc_insertion_point(field_set_allocated:palo.FileVersionMessage.delta_pruning)
}

// -------------------------------------------------------------------

// SchemaChangeStatusMessage

// required int64 related_tablet_id = 1;
inline bool SchemaChangeStatusMessage::has_related_tablet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SchemaChangeStatusMessage::set_has_related_tablet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SchemaChangeStatusMessage::clear_has_related_tablet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SchemaChangeStatusMessage::clear_related_tablet_id() {
  related_tablet_id_ = GOOGLE_LONGLONG(0);
  clear_has_related_tablet_id();
}
inline ::google::protobuf::int64 SchemaChangeStatusMessage::related_tablet_id() const {
  // @@protoc_insertion_point(field_get:palo.SchemaChangeStatusMessage.related_tablet_id)
  return related_tablet_id_;
}
inline void SchemaChangeStatusMessage::set_related_tablet_id(::google::protobuf::int64 value) {
  set_has_related_tablet_id();
  related_tablet_id_ = value;
  // @@protoc_insertion_point(field_set:palo.SchemaChangeStatusMessage.related_tablet_id)
}

// required int32 related_schema_hash = 2;
inline bool SchemaChangeStatusMessage::has_related_schema_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SchemaChangeStatusMessage::set_has_related_schema_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SchemaChangeStatusMessage::clear_has_related_schema_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SchemaChangeStatusMessage::clear_related_schema_hash() {
  related_schema_hash_ = 0;
  clear_has_related_schema_hash();
}
inline ::google::protobuf::int32 SchemaChangeStatusMessage::related_schema_hash() const {
  // @@protoc_insertion_point(field_get:palo.SchemaChangeStatusMessage.related_schema_hash)
  return related_schema_hash_;
}
inline void SchemaChangeStatusMessage::set_related_schema_hash(::google::protobuf::int32 value) {
  set_has_related_schema_hash();
  related_schema_hash_ = value;
  // @@protoc_insertion_point(field_set:palo.SchemaChangeStatusMessage.related_schema_hash)
}

// repeated .palo.FileVersionMessage versions_to_be_changed = 3;
inline int SchemaChangeStatusMessage::versions_to_be_changed_size() const {
  return versions_to_be_changed_.size();
}
inline void SchemaChangeStatusMessage::clear_versions_to_be_changed() {
  versions_to_be_changed_.Clear();
}
inline const ::palo::FileVersionMessage& SchemaChangeStatusMessage::versions_to_be_changed(int index) const {
  // @@protoc_insertion_point(field_get:palo.SchemaChangeStatusMessage.versions_to_be_changed)
  return versions_to_be_changed_.Get(index);
}
inline ::palo::FileVersionMessage* SchemaChangeStatusMessage::mutable_versions_to_be_changed(int index) {
  // @@protoc_insertion_point(field_mutable:palo.SchemaChangeStatusMessage.versions_to_be_changed)
  return versions_to_be_changed_.Mutable(index);
}
inline ::palo::FileVersionMessage* SchemaChangeStatusMessage::add_versions_to_be_changed() {
  // @@protoc_insertion_point(field_add:palo.SchemaChangeStatusMessage.versions_to_be_changed)
  return versions_to_be_changed_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage >&
SchemaChangeStatusMessage::versions_to_be_changed() const {
  // @@protoc_insertion_point(field_list:palo.SchemaChangeStatusMessage.versions_to_be_changed)
  return versions_to_be_changed_;
}
inline ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage >*
SchemaChangeStatusMessage::mutable_versions_to_be_changed() {
  // @@protoc_insertion_point(field_mutable_list:palo.SchemaChangeStatusMessage.versions_to_be_changed)
  return &versions_to_be_changed_;
}

// required int32 schema_change_type = 4;
inline bool SchemaChangeStatusMessage::has_schema_change_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SchemaChangeStatusMessage::set_has_schema_change_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SchemaChangeStatusMessage::clear_has_schema_change_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SchemaChangeStatusMessage::clear_schema_change_type() {
  schema_change_type_ = 0;
  clear_has_schema_change_type();
}
inline ::google::protobuf::int32 SchemaChangeStatusMessage::schema_change_type() const {
  // @@protoc_insertion_point(field_get:palo.SchemaChangeStatusMessage.schema_change_type)
  return schema_change_type_;
}
inline void SchemaChangeStatusMessage::set_schema_change_type(::google::protobuf::int32 value) {
  set_has_schema_change_type();
  schema_change_type_ = value;
  // @@protoc_insertion_point(field_set:palo.SchemaChangeStatusMessage.schema_change_type)
}

// -------------------------------------------------------------------

// DeleteDataConditionMessage

// required int32 version = 1;
inline bool DeleteDataConditionMessage::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteDataConditionMessage::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteDataConditionMessage::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteDataConditionMessage::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 DeleteDataConditionMessage::version() const {
  // @@protoc_insertion_point(field_get:palo.DeleteDataConditionMessage.version)
  return version_;
}
inline void DeleteDataConditionMessage::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:palo.DeleteDataConditionMessage.version)
}

// repeated string sub_conditions = 2;
inline int DeleteDataConditionMessage::sub_conditions_size() const {
  return sub_conditions_.size();
}
inline void DeleteDataConditionMessage::clear_sub_conditions() {
  sub_conditions_.Clear();
}
inline const ::std::string& DeleteDataConditionMessage::sub_conditions(int index) const {
  // @@protoc_insertion_point(field_get:palo.DeleteDataConditionMessage.sub_conditions)
  return sub_conditions_.Get(index);
}
inline ::std::string* DeleteDataConditionMessage::mutable_sub_conditions(int index) {
  // @@protoc_insertion_point(field_mutable:palo.DeleteDataConditionMessage.sub_conditions)
  return sub_conditions_.Mutable(index);
}
inline void DeleteDataConditionMessage::set_sub_conditions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:palo.DeleteDataConditionMessage.sub_conditions)
  sub_conditions_.Mutable(index)->assign(value);
}
inline void DeleteDataConditionMessage::set_sub_conditions(int index, const char* value) {
  sub_conditions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palo.DeleteDataConditionMessage.sub_conditions)
}
inline void DeleteDataConditionMessage::set_sub_conditions(int index, const char* value, size_t size) {
  sub_conditions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palo.DeleteDataConditionMessage.sub_conditions)
}
inline ::std::string* DeleteDataConditionMessage::add_sub_conditions() {
  return sub_conditions_.Add();
}
inline void DeleteDataConditionMessage::add_sub_conditions(const ::std::string& value) {
  sub_conditions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:palo.DeleteDataConditionMessage.sub_conditions)
}
inline void DeleteDataConditionMessage::add_sub_conditions(const char* value) {
  sub_conditions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palo.DeleteDataConditionMessage.sub_conditions)
}
inline void DeleteDataConditionMessage::add_sub_conditions(const char* value, size_t size) {
  sub_conditions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palo.DeleteDataConditionMessage.sub_conditions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DeleteDataConditionMessage::sub_conditions() const {
  // @@protoc_insertion_point(field_list:palo.DeleteDataConditionMessage.sub_conditions)
  return sub_conditions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DeleteDataConditionMessage::mutable_sub_conditions() {
  // @@protoc_insertion_point(field_mutable_list:palo.DeleteDataConditionMessage.sub_conditions)
  return &sub_conditions_;
}

// -------------------------------------------------------------------

// OLAPHeaderMessage

// required uint32 num_rows_per_data_block = 1;
inline bool OLAPHeaderMessage::has_num_rows_per_data_block() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OLAPHeaderMessage::set_has_num_rows_per_data_block() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OLAPHeaderMessage::clear_has_num_rows_per_data_block() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OLAPHeaderMessage::clear_num_rows_per_data_block() {
  num_rows_per_data_block_ = 0u;
  clear_has_num_rows_per_data_block();
}
inline ::google::protobuf::uint32 OLAPHeaderMessage::num_rows_per_data_block() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.num_rows_per_data_block)
  return num_rows_per_data_block_;
}
inline void OLAPHeaderMessage::set_num_rows_per_data_block(::google::protobuf::uint32 value) {
  set_has_num_rows_per_data_block();
  num_rows_per_data_block_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.num_rows_per_data_block)
}

// repeated .palo.FileVersionMessage file_version = 2;
inline int OLAPHeaderMessage::file_version_size() const {
  return file_version_.size();
}
inline void OLAPHeaderMessage::clear_file_version() {
  file_version_.Clear();
}
inline const ::palo::FileVersionMessage& OLAPHeaderMessage::file_version(int index) const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.file_version)
  return file_version_.Get(index);
}
inline ::palo::FileVersionMessage* OLAPHeaderMessage::mutable_file_version(int index) {
  // @@protoc_insertion_point(field_mutable:palo.OLAPHeaderMessage.file_version)
  return file_version_.Mutable(index);
}
inline ::palo::FileVersionMessage* OLAPHeaderMessage::add_file_version() {
  // @@protoc_insertion_point(field_add:palo.OLAPHeaderMessage.file_version)
  return file_version_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage >&
OLAPHeaderMessage::file_version() const {
  // @@protoc_insertion_point(field_list:palo.OLAPHeaderMessage.file_version)
  return file_version_;
}
inline ::google::protobuf::RepeatedPtrField< ::palo::FileVersionMessage >*
OLAPHeaderMessage::mutable_file_version() {
  // @@protoc_insertion_point(field_mutable_list:palo.OLAPHeaderMessage.file_version)
  return &file_version_;
}

// required int32 cumulative_layer_point = 3;
inline bool OLAPHeaderMessage::has_cumulative_layer_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OLAPHeaderMessage::set_has_cumulative_layer_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OLAPHeaderMessage::clear_has_cumulative_layer_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OLAPHeaderMessage::clear_cumulative_layer_point() {
  cumulative_layer_point_ = 0;
  clear_has_cumulative_layer_point();
}
inline ::google::protobuf::int32 OLAPHeaderMessage::cumulative_layer_point() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.cumulative_layer_point)
  return cumulative_layer_point_;
}
inline void OLAPHeaderMessage::set_cumulative_layer_point(::google::protobuf::int32 value) {
  set_has_cumulative_layer_point();
  cumulative_layer_point_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.cumulative_layer_point)
}

// required uint32 num_short_key_fields = 4;
inline bool OLAPHeaderMessage::has_num_short_key_fields() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OLAPHeaderMessage::set_has_num_short_key_fields() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OLAPHeaderMessage::clear_has_num_short_key_fields() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OLAPHeaderMessage::clear_num_short_key_fields() {
  num_short_key_fields_ = 0u;
  clear_has_num_short_key_fields();
}
inline ::google::protobuf::uint32 OLAPHeaderMessage::num_short_key_fields() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.num_short_key_fields)
  return num_short_key_fields_;
}
inline void OLAPHeaderMessage::set_num_short_key_fields(::google::protobuf::uint32 value) {
  set_has_num_short_key_fields();
  num_short_key_fields_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.num_short_key_fields)
}

// repeated .palo.ColumnMessage column = 5;
inline int OLAPHeaderMessage::column_size() const {
  return column_.size();
}
inline void OLAPHeaderMessage::clear_column() {
  column_.Clear();
}
inline const ::palo::ColumnMessage& OLAPHeaderMessage::column(int index) const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.column)
  return column_.Get(index);
}
inline ::palo::ColumnMessage* OLAPHeaderMessage::mutable_column(int index) {
  // @@protoc_insertion_point(field_mutable:palo.OLAPHeaderMessage.column)
  return column_.Mutable(index);
}
inline ::palo::ColumnMessage* OLAPHeaderMessage::add_column() {
  // @@protoc_insertion_point(field_add:palo.OLAPHeaderMessage.column)
  return column_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::palo::ColumnMessage >&
OLAPHeaderMessage::column() const {
  // @@protoc_insertion_point(field_list:palo.OLAPHeaderMessage.column)
  return column_;
}
inline ::google::protobuf::RepeatedPtrField< ::palo::ColumnMessage >*
OLAPHeaderMessage::mutable_column() {
  // @@protoc_insertion_point(field_mutable_list:palo.OLAPHeaderMessage.column)
  return &column_;
}

// required int64 creation_time = 6;
inline bool OLAPHeaderMessage::has_creation_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OLAPHeaderMessage::set_has_creation_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OLAPHeaderMessage::clear_has_creation_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OLAPHeaderMessage::clear_creation_time() {
  creation_time_ = GOOGLE_LONGLONG(0);
  clear_has_creation_time();
}
inline ::google::protobuf::int64 OLAPHeaderMessage::creation_time() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.creation_time)
  return creation_time_;
}
inline void OLAPHeaderMessage::set_creation_time(::google::protobuf::int64 value) {
  set_has_creation_time();
  creation_time_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.creation_time)
}

// repeated int32 selectivity = 7;
inline int OLAPHeaderMessage::selectivity_size() const {
  return selectivity_.size();
}
inline void OLAPHeaderMessage::clear_selectivity() {
  selectivity_.Clear();
}
inline ::google::protobuf::int32 OLAPHeaderMessage::selectivity(int index) const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.selectivity)
  return selectivity_.Get(index);
}
inline void OLAPHeaderMessage::set_selectivity(int index, ::google::protobuf::int32 value) {
  selectivity_.Set(index, value);
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.selectivity)
}
inline void OLAPHeaderMessage::add_selectivity(::google::protobuf::int32 value) {
  selectivity_.Add(value);
  // @@protoc_insertion_point(field_add:palo.OLAPHeaderMessage.selectivity)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OLAPHeaderMessage::selectivity() const {
  // @@protoc_insertion_point(field_list:palo.OLAPHeaderMessage.selectivity)
  return selectivity_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OLAPHeaderMessage::mutable_selectivity() {
  // @@protoc_insertion_point(field_mutable_list:palo.OLAPHeaderMessage.selectivity)
  return &selectivity_;
}

// optional .palo.SchemaChangeStatusMessage schema_change_status = 8;
inline bool OLAPHeaderMessage::has_schema_change_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OLAPHeaderMessage::set_has_schema_change_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OLAPHeaderMessage::clear_has_schema_change_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OLAPHeaderMessage::clear_schema_change_status() {
  if (schema_change_status_ != NULL) schema_change_status_->::palo::SchemaChangeStatusMessage::Clear();
  clear_has_schema_change_status();
}
inline const ::palo::SchemaChangeStatusMessage& OLAPHeaderMessage::schema_change_status() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.schema_change_status)
  return schema_change_status_ != NULL ? *schema_change_status_ : *default_instance_->schema_change_status_;
}
inline ::palo::SchemaChangeStatusMessage* OLAPHeaderMessage::mutable_schema_change_status() {
  set_has_schema_change_status();
  if (schema_change_status_ == NULL) schema_change_status_ = new ::palo::SchemaChangeStatusMessage;
  // @@protoc_insertion_point(field_mutable:palo.OLAPHeaderMessage.schema_change_status)
  return schema_change_status_;
}
inline ::palo::SchemaChangeStatusMessage* OLAPHeaderMessage::release_schema_change_status() {
  clear_has_schema_change_status();
  ::palo::SchemaChangeStatusMessage* temp = schema_change_status_;
  schema_change_status_ = NULL;
  return temp;
}
inline void OLAPHeaderMessage::set_allocated_schema_change_status(::palo::SchemaChangeStatusMessage* schema_change_status) {
  delete schema_change_status_;
  schema_change_status_ = schema_change_status;
  if (schema_change_status) {
    set_has_schema_change_status();
  } else {
    clear_has_schema_change_status();
  }
  // @@protoc_insertion_point(field_set_allocated:palo.OLAPHeaderMessage.schema_change_status)
}

// optional .palo.DataFileType data_file_type = 9 [default = OLAP_DATA_FILE];
inline bool OLAPHeaderMessage::has_data_file_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OLAPHeaderMessage::set_has_data_file_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OLAPHeaderMessage::clear_has_data_file_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OLAPHeaderMessage::clear_data_file_type() {
  data_file_type_ = 0;
  clear_has_data_file_type();
}
inline ::palo::DataFileType OLAPHeaderMessage::data_file_type() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.data_file_type)
  return static_cast< ::palo::DataFileType >(data_file_type_);
}
inline void OLAPHeaderMessage::set_data_file_type(::palo::DataFileType value) {
  assert(::palo::DataFileType_IsValid(value));
  set_has_data_file_type();
  data_file_type_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.data_file_type)
}

// optional uint32 next_column_unique_id = 10 [default = 0];
inline bool OLAPHeaderMessage::has_next_column_unique_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OLAPHeaderMessage::set_has_next_column_unique_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OLAPHeaderMessage::clear_has_next_column_unique_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OLAPHeaderMessage::clear_next_column_unique_id() {
  next_column_unique_id_ = 0u;
  clear_has_next_column_unique_id();
}
inline ::google::protobuf::uint32 OLAPHeaderMessage::next_column_unique_id() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.next_column_unique_id)
  return next_column_unique_id_;
}
inline void OLAPHeaderMessage::set_next_column_unique_id(::google::protobuf::uint32 value) {
  set_has_next_column_unique_id();
  next_column_unique_id_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.next_column_unique_id)
}

// optional .palo.CompressKind compress_kind = 11 [default = COMPRESS_LZO];
inline bool OLAPHeaderMessage::has_compress_kind() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OLAPHeaderMessage::set_has_compress_kind() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OLAPHeaderMessage::clear_has_compress_kind() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OLAPHeaderMessage::clear_compress_kind() {
  compress_kind_ = 1;
  clear_has_compress_kind();
}
inline ::palo::CompressKind OLAPHeaderMessage::compress_kind() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.compress_kind)
  return static_cast< ::palo::CompressKind >(compress_kind_);
}
inline void OLAPHeaderMessage::set_compress_kind(::palo::CompressKind value) {
  assert(::palo::CompressKind_IsValid(value));
  set_has_compress_kind();
  compress_kind_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.compress_kind)
}

// optional uint32 segment_size = 12 [default = 4292870144];
inline bool OLAPHeaderMessage::has_segment_size() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OLAPHeaderMessage::set_has_segment_size() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OLAPHeaderMessage::clear_has_segment_size() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OLAPHeaderMessage::clear_segment_size() {
  segment_size_ = 4292870144u;
  clear_has_segment_size();
}
inline ::google::protobuf::uint32 OLAPHeaderMessage::segment_size() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.segment_size)
  return segment_size_;
}
inline void OLAPHeaderMessage::set_segment_size(::google::protobuf::uint32 value) {
  set_has_segment_size();
  segment_size_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.segment_size)
}

// repeated .palo.DeleteDataConditionMessage delete_data_conditions = 13;
inline int OLAPHeaderMessage::delete_data_conditions_size() const {
  return delete_data_conditions_.size();
}
inline void OLAPHeaderMessage::clear_delete_data_conditions() {
  delete_data_conditions_.Clear();
}
inline const ::palo::DeleteDataConditionMessage& OLAPHeaderMessage::delete_data_conditions(int index) const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.delete_data_conditions)
  return delete_data_conditions_.Get(index);
}
inline ::palo::DeleteDataConditionMessage* OLAPHeaderMessage::mutable_delete_data_conditions(int index) {
  // @@protoc_insertion_point(field_mutable:palo.OLAPHeaderMessage.delete_data_conditions)
  return delete_data_conditions_.Mutable(index);
}
inline ::palo::DeleteDataConditionMessage* OLAPHeaderMessage::add_delete_data_conditions() {
  // @@protoc_insertion_point(field_add:palo.OLAPHeaderMessage.delete_data_conditions)
  return delete_data_conditions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::palo::DeleteDataConditionMessage >&
OLAPHeaderMessage::delete_data_conditions() const {
  // @@protoc_insertion_point(field_list:palo.OLAPHeaderMessage.delete_data_conditions)
  return delete_data_conditions_;
}
inline ::google::protobuf::RepeatedPtrField< ::palo::DeleteDataConditionMessage >*
OLAPHeaderMessage::mutable_delete_data_conditions() {
  // @@protoc_insertion_point(field_mutable_list:palo.OLAPHeaderMessage.delete_data_conditions)
  return &delete_data_conditions_;
}

// optional double bf_fpp = 14;
inline bool OLAPHeaderMessage::has_bf_fpp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OLAPHeaderMessage::set_has_bf_fpp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OLAPHeaderMessage::clear_has_bf_fpp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OLAPHeaderMessage::clear_bf_fpp() {
  bf_fpp_ = 0;
  clear_has_bf_fpp();
}
inline double OLAPHeaderMessage::bf_fpp() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.bf_fpp)
  return bf_fpp_;
}
inline void OLAPHeaderMessage::set_bf_fpp(double value) {
  set_has_bf_fpp();
  bf_fpp_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.bf_fpp)
}

// optional .palo.KeysType keys_type = 15;
inline bool OLAPHeaderMessage::has_keys_type() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void OLAPHeaderMessage::set_has_keys_type() {
  _has_bits_[0] |= 0x00004000u;
}
inline void OLAPHeaderMessage::clear_has_keys_type() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void OLAPHeaderMessage::clear_keys_type() {
  keys_type_ = 0;
  clear_has_keys_type();
}
inline ::palo::KeysType OLAPHeaderMessage::keys_type() const {
  // @@protoc_insertion_point(field_get:palo.OLAPHeaderMessage.keys_type)
  return static_cast< ::palo::KeysType >(keys_type_);
}
inline void OLAPHeaderMessage::set_keys_type(::palo::KeysType value) {
  assert(::palo::KeysType_IsValid(value));
  set_has_keys_type();
  keys_type_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPHeaderMessage.keys_type)
}

// -------------------------------------------------------------------

// OLAPIndexHeaderMessage

// required int32 start_version = 1;
inline bool OLAPIndexHeaderMessage::has_start_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OLAPIndexHeaderMessage::set_has_start_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OLAPIndexHeaderMessage::clear_has_start_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OLAPIndexHeaderMessage::clear_start_version() {
  start_version_ = 0;
  clear_has_start_version();
}
inline ::google::protobuf::int32 OLAPIndexHeaderMessage::start_version() const {
  // @@protoc_insertion_point(field_get:palo.OLAPIndexHeaderMessage.start_version)
  return start_version_;
}
inline void OLAPIndexHeaderMessage::set_start_version(::google::protobuf::int32 value) {
  set_has_start_version();
  start_version_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPIndexHeaderMessage.start_version)
}

// required int32 end_version = 2;
inline bool OLAPIndexHeaderMessage::has_end_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OLAPIndexHeaderMessage::set_has_end_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OLAPIndexHeaderMessage::clear_has_end_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OLAPIndexHeaderMessage::clear_end_version() {
  end_version_ = 0;
  clear_has_end_version();
}
inline ::google::protobuf::int32 OLAPIndexHeaderMessage::end_version() const {
  // @@protoc_insertion_point(field_get:palo.OLAPIndexHeaderMessage.end_version)
  return end_version_;
}
inline void OLAPIndexHeaderMessage::set_end_version(::google::protobuf::int32 value) {
  set_has_end_version();
  end_version_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPIndexHeaderMessage.end_version)
}

// required int64 cumulative_version_hash = 3;
inline bool OLAPIndexHeaderMessage::has_cumulative_version_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OLAPIndexHeaderMessage::set_has_cumulative_version_hash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OLAPIndexHeaderMessage::clear_has_cumulative_version_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OLAPIndexHeaderMessage::clear_cumulative_version_hash() {
  cumulative_version_hash_ = GOOGLE_LONGLONG(0);
  clear_has_cumulative_version_hash();
}
inline ::google::protobuf::int64 OLAPIndexHeaderMessage::cumulative_version_hash() const {
  // @@protoc_insertion_point(field_get:palo.OLAPIndexHeaderMessage.cumulative_version_hash)
  return cumulative_version_hash_;
}
inline void OLAPIndexHeaderMessage::set_cumulative_version_hash(::google::protobuf::int64 value) {
  set_has_cumulative_version_hash();
  cumulative_version_hash_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPIndexHeaderMessage.cumulative_version_hash)
}

// required uint32 segment = 4;
inline bool OLAPIndexHeaderMessage::has_segment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OLAPIndexHeaderMessage::set_has_segment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OLAPIndexHeaderMessage::clear_has_segment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OLAPIndexHeaderMessage::clear_segment() {
  segment_ = 0u;
  clear_has_segment();
}
inline ::google::protobuf::uint32 OLAPIndexHeaderMessage::segment() const {
  // @@protoc_insertion_point(field_get:palo.OLAPIndexHeaderMessage.segment)
  return segment_;
}
inline void OLAPIndexHeaderMessage::set_segment(::google::protobuf::uint32 value) {
  set_has_segment();
  segment_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPIndexHeaderMessage.segment)
}

// required uint32 num_rows_per_block = 5;
inline bool OLAPIndexHeaderMessage::has_num_rows_per_block() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OLAPIndexHeaderMessage::set_has_num_rows_per_block() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OLAPIndexHeaderMessage::clear_has_num_rows_per_block() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OLAPIndexHeaderMessage::clear_num_rows_per_block() {
  num_rows_per_block_ = 0u;
  clear_has_num_rows_per_block();
}
inline ::google::protobuf::uint32 OLAPIndexHeaderMessage::num_rows_per_block() const {
  // @@protoc_insertion_point(field_get:palo.OLAPIndexHeaderMessage.num_rows_per_block)
  return num_rows_per_block_;
}
inline void OLAPIndexHeaderMessage::set_num_rows_per_block(::google::protobuf::uint32 value) {
  set_has_num_rows_per_block();
  num_rows_per_block_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPIndexHeaderMessage.num_rows_per_block)
}

// optional bool null_supported = 6;
inline bool OLAPIndexHeaderMessage::has_null_supported() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OLAPIndexHeaderMessage::set_has_null_supported() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OLAPIndexHeaderMessage::clear_has_null_supported() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OLAPIndexHeaderMessage::clear_null_supported() {
  null_supported_ = false;
  clear_has_null_supported();
}
inline bool OLAPIndexHeaderMessage::null_supported() const {
  // @@protoc_insertion_point(field_get:palo.OLAPIndexHeaderMessage.null_supported)
  return null_supported_;
}
inline void OLAPIndexHeaderMessage::set_null_supported(bool value) {
  set_has_null_supported();
  null_supported_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPIndexHeaderMessage.null_supported)
}

// optional bool delete_flag = 7;
inline bool OLAPIndexHeaderMessage::has_delete_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OLAPIndexHeaderMessage::set_has_delete_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OLAPIndexHeaderMessage::clear_has_delete_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OLAPIndexHeaderMessage::clear_delete_flag() {
  delete_flag_ = false;
  clear_has_delete_flag();
}
inline bool OLAPIndexHeaderMessage::delete_flag() const {
  // @@protoc_insertion_point(field_get:palo.OLAPIndexHeaderMessage.delete_flag)
  return delete_flag_;
}
inline void OLAPIndexHeaderMessage::set_delete_flag(bool value) {
  set_has_delete_flag();
  delete_flag_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPIndexHeaderMessage.delete_flag)
}

// -------------------------------------------------------------------

// OLAPDataHeaderMessage

// required uint32 segment = 2;
inline bool OLAPDataHeaderMessage::has_segment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OLAPDataHeaderMessage::set_has_segment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OLAPDataHeaderMessage::clear_has_segment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OLAPDataHeaderMessage::clear_segment() {
  segment_ = 0u;
  clear_has_segment();
}
inline ::google::protobuf::uint32 OLAPDataHeaderMessage::segment() const {
  // @@protoc_insertion_point(field_get:palo.OLAPDataHeaderMessage.segment)
  return segment_;
}
inline void OLAPDataHeaderMessage::set_segment(::google::protobuf::uint32 value) {
  set_has_segment();
  segment_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPDataHeaderMessage.segment)
}

// -------------------------------------------------------------------

// OLAPRawDeltaHeaderMessage

// required int32 schema_hash = 2;
inline bool OLAPRawDeltaHeaderMessage::has_schema_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OLAPRawDeltaHeaderMessage::set_has_schema_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OLAPRawDeltaHeaderMessage::clear_has_schema_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OLAPRawDeltaHeaderMessage::clear_schema_hash() {
  schema_hash_ = 0;
  clear_has_schema_hash();
}
inline ::google::protobuf::int32 OLAPRawDeltaHeaderMessage::schema_hash() const {
  // @@protoc_insertion_point(field_get:palo.OLAPRawDeltaHeaderMessage.schema_hash)
  return schema_hash_;
}
inline void OLAPRawDeltaHeaderMessage::set_schema_hash(::google::protobuf::int32 value) {
  set_has_schema_hash();
  schema_hash_ = value;
  // @@protoc_insertion_point(field_set:palo.OLAPRawDeltaHeaderMessage.schema_hash)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace palo

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::palo::DataFileType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::palo::DataFileType>() {
  return ::palo::DataFileType_descriptor();
}
template <> struct is_proto_enum< ::palo::KeysType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::palo::KeysType>() {
  return ::palo::KeysType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_olap_5ffile_2eproto__INCLUDED
